id: DCASE2019Task4-32k
_target_: autrainer.datasets.DCASE2019Task4

path: data/DCASE2019
features_subdir: log_mel_32k
index_column: filename
target_column: event_label
file_type: npy
file_handler: autrainer.datasets.utils.NumpyFileHandler

# Match mel spectrogram hop_size:
# DCASE2019: 256/16000 = 0.016s per frame
# 320/32000 = 0.01s per frame
# 640/32000 = 0.02s per frame
frame_rate: 0.02 # 0.02  
duration: 10.0 # fixed
threshold: 0.3 # 0.5
min_event_length: 0.25  # DCASE: 0.25
pause_length: 0.15      # DCASE: 0.15
# median_window: 7
# Sound event bounding boxes (sebbs):
use_sebb: false
use_hybrid: false
tsebb_threshold: 0.5
csebb_tau: 0.48  # Change detection window in seconds
csebb_gamma: 0.2  # Merge threshold (absolute)
hybrid_threshold: 0.5  # Threshold for selecting high-confidence tSEBBs

# torch.nn.BCEWithLogitsLoss
# autrainer.criterions.classification.AsymmetricFocalLoss 
# BoundaryAwareBCELoss OnsetOffsetWeightedBCELoss FocalBatchTverskyLoss SimpleReweightingLoss
criterion: torch.nn.BCEWithLogitsLoss
metrics:
  - autrainer.metrics.SegmentBasedF1
  - autrainer.metrics.EventBasedF1
  - autrainer.metrics.SegmentBasedErrorRate
  - autrainer.metrics.EventBasedErrorRate
  - autrainer.metrics.PSDS1
  - autrainer.metrics.PSDS2
tracking_metric: autrainer.metrics.EventBasedF1

transform:
  type: grayscale
  base:
    # TODO: DCASE2019: 108, check https://dcase.community/challenge2019/task-sound-event-detection-in-domestic-environments
    - autrainer.transforms.PadCollate:
        target_length: 500 # 10 seconds / 0.02s = 500 frames
        pad_dim: 1
        pad_value: 0.0
    # - autrainer.transforms.Resize: # for HTSAT
    #     height: 256
    #     width: 256
    #     interpolation: bilinear
    #     antialias: true